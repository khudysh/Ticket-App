components:
  schemas:
    Users:
      type: object
      required:
        - email
        - login
        - password
        - full_name
      properties:
        id:
          type: integer
          description: Автогенерируемый id пользователя
        email:
          type: string
          description: Электронная почта пользователя
        login:
          type: string
          description: Логин пользователя
        password:
          type: string
          description: Пароль пользователя
        full_name:
          type: string
          description: Полное имя пользователя
      example:
        id: 1
        email: user@example.com
        login: user123
        password: password123
        full_name: John Doe


tags:
  name: Users
  description: API пользователей
/login:
  post:
    tags: [Users]
    summary: "Login a user"
    description: "Login with username and password"
    consumes:
      - "application/json"
    produces:
      - "application/json"
    requestBody:
      required: true
      content:
        application/json:
          schema:
            type: object
            properties:
              login:
                type: string
              password:
                type: string
            required:
              - login
              - password
    responses:
      200:
        description: "Login successful"
      401:
        description: "Invalid credentials"

/user/{id}:
  put:
    tags: [Users]
    summary: "Update user data"
    description: "Update user's email, full name, and password"
    consumes:
      - "application/json"
    produces:
      - "application/json"
    parameters:
      - name: "id"
        in: "path"
        required: true
        type: "integer"
        format: "int64"
    requestBody:
      required: true
      content:
        application/json:
          schema:
            type: object
            properties:
              email:
                type: string
              password:
                type: string
              full_name:
                type: string
            required:
              - login
              - password
              - full_name
    responses:
      200:
        description: "User data updated successfully"
      400:
        description: "Invalid input"
      401:
        description: "Unauthorized"
      500:
        description: "Error updating user data"
  get:
    tags: [Users]
    summary: Get User Information
    description: Retrieve information about a user based on their user ID.
    parameters:
      - in: path
        name: id
        required: true
        description: The user ID.
        schema:
          type: integer
          format: int64
    responses:
      '200':
        description: Successfully retrieved user information
        content:
          application/json:
            schema:
              type: object
              properties:
                user:
                  type: object
                  properties:
                    id:
                      type: integer
                      format: int64
                    email:
                      type: string
                      format: email
                    login:
                      type: string
                    full_name:
                      type: string
                    user_type:
                      type: string
      '401':
        description: Unauthorized access
      '403':
        description: Forbidden - User not allowed to access the data
      '404':
        description: User not found
      '500':
        description: Internal server error